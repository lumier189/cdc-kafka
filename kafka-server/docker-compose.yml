version: "2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    restart: always
  environment:
  - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    restart: always
    environment:
    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT
    - KAFKA_CFG_LISTENERS=EXTERNAL://:9092
    - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://:9092
    - KAFKA_INTER_BROKER_LISTENER_NAME=EXTERNAL
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    - KAFKA_ENABLE_KRAFT=no 
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui:master
    ports:
      - "8080:8080"
    restart: always
    links:
     - kafka
    environment:
    - KAFKA_CLUSTERS_0_NAME=kafka1
    - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    - AUTH_TYPE=LOGIN_FORM
    - SPRING_SECURITY_USER_NAME=admin
    - SPRING_SECURITY_USER_PASSWORD=admin
    mysql:
      image: quay.io/debezium/example-mysql:2.1
      ports:
        - 3306:3306
      environment:
        - MYSQL_ROOT_PASSWORD=debezium
        - MYSQL_USER=mysqluser
        - MYSQL_PASSWORD=mysqlpw
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
networks: 
  default: 
      name: kafka-net
      external: true